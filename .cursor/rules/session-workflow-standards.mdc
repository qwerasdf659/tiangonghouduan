---
description: 
globs: 
alwaysApply: false
---
# 会话流程标准化规则
# 基于实际会话分析，解决信息重复和流程混乱问题

## 核心问题分析
通过对实际会话的深度分析，发现以下严重的流程问题：
- 信息重复率：300-500%
- 简单问题复杂化：本可50行解决，实际生成1000+行
- 缺乏标准化模板：每次都重新设计流程
- 重点信息掩盖：核心信息被细节掩盖

## 会话开始标准化流程

### 任务理解和目标确认
- **5分钟规则**：任务理解和目标确认必须在5分钟内完成
- **明确性原则**：明确说明会话目标、预期结果、时间预估
- **范围界定**：明确任务边界，避免范围蔓延
- **优先级设定**：识别关键任务和次要任务的优先级

### 快速项目类型识别
- **30秒识别**：通过关键文件快速识别项目类型
- **技术栈确认**：确认使用的框架、语言、工具链
- **环境分析**：确认开发、测试、生产环境差异
- **依赖检查**：快速验证关键依赖的可用性

### 问题分类和处理策略
- **A类问题（紧急配置）**：立即修复，1-2分钟解决
- **B类问题（服务异常）**：重启恢复，3-5分钟解决
- **C类问题（代码逻辑）**：代码修改，5-10分钟解决
- **D类问题（系统环境）**：环境重建，10-15分钟解决

## 信息收集标准化流程

### 并行信息收集策略
- **信息预分析**：在收集前分析需要哪些信息
- **批量并行收集**：所有独立信息必须并行收集
- **分层收集原则**：先收集关键信息，再收集补充信息
- **信息去重机制**：避免收集重复或冗余信息

### 状态检查去重机制
- **一次性检查**：同类状态检查在单次会话中只执行一次
- **检查结果缓存**：重要状态检查结果必须缓存使用
- **变更触发机制**：只有在状态可能变更后才重新检查
- **批量状态验证**：相关状态检查集中在一次操作中完成

### 信息整理和呈现
- **关键信息优先**：重要信息前置，细节信息后置
- **结构化呈现**：使用标准格式呈现分析结果
- **进度可视化**：提供清晰的任务完成进度
- **结果摘要**：每个阶段提供简洁的结果摘要

## 问题解决标准化流程

### 快速问题诊断（5分钟内）
1. **症状识别**（30秒）：快速识别问题症状和影响范围
2. **环境检查**（1分钟）：并行检查服务状态、配置、日志
3. **根因分析**（2分钟）：基于症状和环境快速定位根因
4. **方案选择**（1分钟）：选择最优解决方案
5. **风险评估**（30秒）：评估修复方案的风险和影响

### 解决方案执行标准
- **原子操作原则**：将复杂修复分解为独立的原子操作
- **检查点机制**：关键步骤前后设置检查点
- **并行执行优化**：独立修复操作必须并行执行
- **实时验证机制**：每个修复步骤后立即验证效果

### 修复验证和确认
- **功能验证**：验证核心功能是否恢复正常
- **性能检查**：确认修复后系统性能无退化
- **副作用检查**：检查修复是否引入新问题
- **文档更新**：更新相关配置和操作文档

## 文档生成优化流程

### 文档长度控制机制
- **50行原则**：简单问题解决文档不超过50行
- **200行限制**：复杂问题解决文档不超过200行
- **500行上限**：系统性问题文档不超过500行
- **冗余检测**：自动检测和删除重复信息

### 内容结构标准化
- **执行摘要**：开头提供3-5行的执行摘要
- **问题描述**：简洁描述问题现象和影响
- **解决方案**：具体的修复步骤和命令
- **验证结果**：修复效果的验证结果
- **后续建议**：预防类似问题的建议

### 信息去重和精简
- **核心信息提取**：只保留解决问题必需的信息
- **过程信息压缩**：将详细过程压缩为关键步骤
- **技术细节分层**：核心流程 + 技术细节（可选展开）
- **重复内容合并**：合并相似或重复的信息块

## 会话质量控制机制

### 效率指标监控
- **时间控制**：问题定位<5分钟，解决<15分钟，文档<5分钟
- **工具调用控制**：单次会话工具调用<20次
- **重复率控制**：信息重复率<10%
- **完成率控制**：任务完成率>95%

### 质量检查清单
- [ ] 问题是否准确定位？
- [ ] 解决方案是否有效？
- [ ] 文档是否简洁明了？
- [ ] 是否存在重复信息？
- [ ] 用户是否能够理解和执行？

### 持续改进机制
- **模式识别**：识别重复出现的问题模式
- **模板优化**：基于实际使用优化标准模板
- **流程改进**：定期回顾和改进工作流程
- **知识积累**：建立问题解决方案知识库

## 用户体验优化标准

### 沟通效率优化
- **期望管理**：明确告知用户预期时间和结果
- **进度反馈**：定期更新任务进度和状态
- **问题说明**：用通俗语言解释技术问题
- **操作指导**：提供清晰的操作步骤和命令

### 错误处理标准化
- **错误分类**：按影响程度和紧急程度分类错误
- **恢复机制**：提供标准的错误恢复流程
- **预防建议**：给出预防类似问题的建议
- **替代方案**：主方案失败时提供备选方案

### 结果确认机制
- **功能验证**：验证修复效果是否符合预期
- **性能确认**：确认系统性能无负面影响
- **用户确认**：获得用户对修复结果的确认
- **文档交付**：提供简洁的操作记录和建议

## 特殊场景处理规范

### 复杂问题处理
- **问题分解**：将复杂问题分解为独立子问题
- **优先级排序**：按影响程度和解决难度排序
- **阶段性处理**：分阶段解决，每阶段独立验证
- **风险控制**：高风险操作前充分评估和备份

### 中断恢复机制
- **状态保存**：关键节点自动保存会话状态
- **快速恢复**：中断后能快速恢复到最近状态
- **上下文重建**：简洁重建必要的上下文信息
- **进度继承**：避免重复已完成的工作

### 多任务协调
- **任务队列**：建立清晰的任务优先级队列
- **依赖管理**：识别和管理任务间的依赖关系
- **并行处理**：独立任务并行处理，提高效率
- **统一交付**：统一整理和交付所有任务结果

## 实施检查清单

### 会话开始前
- [ ] 明确会话目标和成功标准
- [ ] 估算任务复杂度和预期时间
- [ ] 识别关键风险点和应对策略
- [ ] 准备必要的检查和验证机制

### 会话进行中
- [ ] 定期检查任务进度和质量
- [ ] 识别和消除重复操作
- [ ] 保持文档结构清晰简洁
- [ ] 及时向用户反馈进度和问题

### 会话结束前
- [ ] 验证所有任务目标已达成
- [ ] 检查文档质量和可读性
- [ ] 确认用户对结果满意
- [ ] 记录经验教训和改进建议

**核心原则**：效率优先、结构清晰、信息精简、用户至上、持续改进
