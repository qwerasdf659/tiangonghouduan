{
  "name": "restaurant-lottery-system-v4-unified",
  "version": "4.0.0",
  "description": "餐厅积分抽奖系统 - V4统一引擎架构",
  "main": "app.js",
  "author": "Restaurant Lottery Team",
  "license": "MIT",
  "engines": {
    "node": ">=20.18.0",
    "npm": ">=8.0.0"
  },
  "scripts": {
    "start": "node app.js",
    "dev": "nodemon app.js",
    "test": "jest",
    "test:coverage": "jest --coverage",
    "lint": "eslint . --ext .js",
    "lint:fix": "eslint . --ext .js --fix",
    "db:migrate": "npx sequelize-cli db:migrate",
    "db:migrate:undo": "npx sequelize-cli db:migrate:undo",
    "db:seed": "npx sequelize-cli db:seed:all",
    "db:reset": "npx sequelize-cli db:migrate:undo:all && npx sequelize-cli db:migrate && npx sequelize-cli db:seed:all",
    "backup": "node scripts/backup-database.js",
    "test:new-feature": "node scripts/test-new-feature.js",
    "deploy:check": "npm run lint && npm run test && npm run test:new-feature",
    "health:check": "node scripts/core/health-check.js",
    "_comment_quality": "=== 代码质量检查命令 ===",
    "quality:check": "node scripts/quality-check/test-implementation-checker.js",
    "quality:business-semantic": "node eslint-rules/test-implementation-consistency.js",
    "quality:test-standards": "node tests/helpers/test-quality-reporter.js",
    "quality:full": "npm run lint && npm run quality:check && npm run quality:business-semantic && npm run test:unified",
    "_comment_test": "=== 集成测试命令 ===",
    "test:integrated": "node scripts/run-integrated-tests.js",
    "test:unified": "node tests/UnifiedTestManager.js",
    "_comment": "=== 统一进程管理命令（解决端口冲突）===",
    "pm:status": "./scripts/process-manager.sh status",
    "pm:start": "./scripts/process-manager.sh start",
    "pm:start:pm2": "./scripts/process-manager.sh start pm2",
    "pm:start:dev": "./scripts/process-manager.sh start dev",
    "pm:restart": "./scripts/process-manager.sh restart",
    "pm:stop": "./scripts/process-manager.sh stop",
    "pm:cleanup": "./scripts/process-manager.sh cleanup",
    "pm:help": "./scripts/process-manager.sh help"
  },
  "dependencies": {
    "aws-sdk": "^2.1691.0",
    "axios": "^1.11.0",
    "bcrypt": "^6.0.0",
    "bcryptjs": "^2.4.3",
    "colors": "^1.4.0",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "crypto": "^1.0.1",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-rate-limit": "^7.1.5",
    "helmet": "^7.1.0",
    "ioredis": "^5.7.0",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "lodash": "^4.17.21",
    "moment": "^2.29.4",
    "moment-timezone": "^0.6.0",
    "multer": "^1.4.5-lts.1",
    "mysql2": "^3.6.5",
    "node-cron": "^3.0.3",
    "path": "^0.12.7",
    "redis": "^5.8.0",
    "sequelize": "^6.35.2",
    "sharp": "^0.32.6",
    "socket.io": "^4.8.1",
    "uuid": "^9.0.1",
    "winston": "^3.11.0",
    "ws": "^8.18.3"
  },
  "devDependencies": {
    "eslint": "^8.55.0",
    "eslint-config-standard": "^17.1.0",
    "eslint-plugin-import": "^2.29.0",
    "eslint-plugin-local-rules": "^3.0.2",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^6.1.1",
    "glob": "^11.0.3",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "lint-staged": "^15.2.0",
    "nodemon": "^3.0.2",
    "prettier": "^3.1.1",
    "sequelize-cli": "^6.6.2",
    "supertest": "^6.3.4"
  },
  "keywords": [
    "restaurant",
    "lottery",
    "points",
    "storage",
    "layered-architecture",
    "multi-business",
    "image-management",
    "sealos",
    "express",
    "sequelize",
    "mysql"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/restaurant-lottery-system-v4.git"
  },
  "bugs": {
    "url": "https://github.com/your-org/restaurant-lottery-system-v4/issues"
  },
  "homepage": "https://github.com/your-org/restaurant-lottery-system-v4#readme",
  "eslintConfig": {
    "env": {
      "node": true,
      "es2021": true,
      "jest": true
    },
    "extends": [
      "standard"
    ],
    "parserOptions": {
      "ecmaVersion": 12,
      "sourceType": "module"
    },
    "rules": {
      "no-console": "off",
      "camelcase": "off",
      "no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_"
        }
      ]
    }
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm test",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "prettier --write",
      "git add"
    ],
    "*.{json,md}": [
      "prettier --write",
      "git add"
    ]
  },
  "architecture": {
    "name": "V4 Unified Lottery Engine Architecture",
    "version": "4.0.0",
    "description": "V4统一抽奖引擎架构，支持3种核心抽奖策略的统一管理和执行",
    "features": [
      "V4统一抽奖引擎",
      "3种核心抽奖策略支持 (基础/保底/管理)",
      "智能决策系统",
      "实时概率调整",
      "统一上下文管理",
      "可扩展策略架构",
      "完整的审计日志",
      "高性能引擎优化"
    ],
    "strategies": [
      "BasicLotteryStrategy - 基础抽奖策略",
      "GuaranteeStrategy - 保底抽奖策略",
      "ManagementStrategy - 管理抽奖策略"
    ],
    "engineCore": {
      "UnifiedLotteryEngine": "统一抽奖引擎主管理器 - 简化集成式设计，包含策略选择、上下文构建和结果处理"
    },
    "techStack": [
      "Node.js 20+ + Express",
      "V4统一抽奖引擎",
      "MySQL + Sequelize ORM",
      "Redis缓存 + 分布式锁",
      "JWT认证 + 权限控制",
      "北京时间支持"
    ]
  },
  "performance": {
    "targetMetrics": {
      "apiResponseTime": "< 100ms",
      "fileUploadTime": "< 2s",
      "databaseQueryTime": "< 50ms",
      "systemAvailability": "> 99.95%",
      "concurrentUsers": "1000+",
      "storageCapacity": "20M+ images"
    },
    "optimizations": [
      "数据库索引优化",
      "图片缓存机制",
      "智能存储分层",
      "批量操作优化",
      "连接池管理",
      "压缩和CDN加速"
    ]
  },
  "deployment": {
    "environments": [
      "development",
      "testing",
      "staging",
      "production"
    ],
    "containerization": {
      "docker": "支持Docker容器化部署",
      "kubernetes": "支持Kubernetes集群部署",
      "sealos": "原生支持Sealos云平台部署"
    },
    "monitoring": [
      "健康检查端点 /health",
      "性能指标监控",
      "错误日志记录",
      "业务数据统计"
    ]
  },
  "security": {
    "authentication": "JWT Bearer Token",
    "authorization": "基于角色的权限控制 (RBAC)",
    "dataProtection": [
      "BCrypt密码加密",
      "文件类型验证",
      "文件大小限制",
      "SQL注入防护",
      "XSS防护",
      "CORS配置"
    ],
    "rateLimit": "API请求频率限制",
    "helmet": "HTTP安全头设置"
  }
}
